[
  {
    "timestamp": 1757993107663,
    "code": "import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport Navbar from \"../components/Navbar\"; \r\n\r\nfunction StudentList() {\r\n  const [students, setStudents] = useState([]);\r\n  const [filterDepartment, setFilterDepartment] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch all students from the backend\r\n  const fetchStudents = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/students\");\r\n      setStudents(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching students:\", error);\r\n      alert(\"Failed to fetch students.\");\r\n    }\r\n  };\r\n\r\n  // Fetch students on component mount\r\n  useEffect(() => {\r\n    fetchStudents();\r\n  }, []);\r\n\r\n  // Delete a student and re-generate QR codes for remaining students\r\n  const handleDelete = async (registerNumber) => {\r\n    try {\r\n      // Delete the student\r\n      await axios.delete(`http://localhost:5000/delete-student/${registerNumber}`);\r\n      alert(\"Student deleted successfully!\");\r\n\r\n      // Re-fetch the updated student list\r\n      fetchStudents();\r\n\r\n      // Re-generate QR codes for all remaining students\r\n      const studentsResponse = await axios.get(\"http://localhost:5000/students\");\r\n      for (const student of studentsResponse.data) {\r\n        await axios.post(\"http://localhost:5000/generate-and-store-qr\", {\r\n          registerNumber: student.registerNumber,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error deleting student:\", error);\r\n      alert(\"Failed to delete student.\");\r\n    }\r\n  };\r\n\r\n  // Filter students by department\r\n  const filteredStudents = students.filter((student) =>\r\n    filterDepartment ? student.department === filterDepartment : true\r\n  );\r\n\r\n  return (\r\n    <>\r\n    <Navbar />\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4 }}>\r\n      <Paper elevation={3} sx={{ p: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Student List\r\n        </Typography>\r\n\r\n        {/* Filter by Department */}\r\n        <Box sx={{ mb: 3 }}>\r\n          <TextField\r\n            label=\"Filter by Department\"\r\n            variant=\"outlined\"\r\n            value={filterDepartment}\r\n            onChange={(e) => setFilterDepartment(e.target.value)}\r\n            sx={{ mr: 2 }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setFilterDepartment(\"\")}\r\n          >\r\n            Clear Filter\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Student Table */}\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Student Name</TableCell>\r\n                <TableCell>Register Number</TableCell>\r\n                <TableCell>Department</TableCell>\r\n                <TableCell>Shift</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {filteredStudents.map((student, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{student.name}</TableCell>\r\n                  <TableCell>{student.registerNumber}</TableCell>\r\n                  <TableCell>{student.department}</TableCell>\r\n                  <TableCell>{student.shift}</TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"error\"\r\n                      onClick={() => handleDelete(student.registerNumber)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        {/* Back to Dashboard Button */}\r\n        <Box sx={{ mt: 4 }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => navigate(\"/dashboard\")}\r\n          >\r\n            Back to Dashboard\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n    </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default StudentList;"
  }
]