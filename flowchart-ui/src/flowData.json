{
  "nodes": [
    {
      "id": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\App.jsx",
      "type": "fileNode",
      "position": {
        "x": 150,
        "y": 80
      },
      "data": {
        "label": "App.jsx",
        "relPath": "sample\\frontend\\src\\App.jsx",
        "summary": "Components: App • Routes: {\"key\":\"path\",\"path\":\"path\",\"element\":\"element\"}",
        "symbols": {
          "components": [
            {
              "id": "sample\\frontend\\src\\App.jsx::component::App",
              "name": "App",
              "kind": "function",
              "start": 0,
              "end": 556,
              "code": "function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Routes>\n        {[\n          { path: \"/\", element: <AdminLogin /> },\n          { path: \"/dashboard\", element: <AddStudent /> },\n          { path: \"/attendance\", element: <Attendance /> },\n          { path: \"/students\", element: <StudentList /> },\n          { path: \"/poll-summary\", element: <PollSummary /> },\n        ].map(({ path, element }) => (\n          <Route key={path} path={path} element={element} />\n        ))}\n      </Routes>\n    </ThemeProvider>\n  );\n}"
            }
          ],
          "hooks": [],
          "contexts": []
        },
        "uses": [
          {
            "name": "ThemeProvider"
          },
          {
            "name": "CssBaseline"
          },
          {
            "name": "Routes"
          },
          {
            "name": "AdminLogin"
          },
          {
            "name": "AddStudent"
          },
          {
            "name": "Attendance"
          },
          {
            "name": "StudentList"
          },
          {
            "name": "PollSummary"
          },
          {
            "name": "Route"
          }
        ],
        "imports": [],
        "providers": [],
        "routes": [
          {
            "props": {
              "key": "path",
              "path": "path",
              "element": "element"
            }
          }
        ],
        "code": "function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Routes>\n        {[\n          { path: \"/\", element: <AdminLogin /> },\n          { path: \"/dashboard\", element: <AddStudent /> },\n          { path: \"/attendance\", element: <Attendance /> },\n          { path: \"/students\", element: <StudentList /> },\n          { path: \"/poll-summary\", element: <PollSummary /> },\n        ].map(({ path, element }) => (\n          <Route key={path} path={path} element={element} />\n        ))}\n      </Routes>\n    </ThemeProvider>\n  );\n}"
      }
    },
    {
      "id": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\AdminLogin.js",
      "type": "fileNode",
      "position": {
        "x": 470,
        "y": 80
      },
      "data": {
        "label": "AdminLogin.js",
        "relPath": "sample\\frontend\\src\\components\\AdminLogin.js",
        "summary": "Components: AdminLogin",
        "symbols": {
          "components": [
            {
              "id": "sample\\frontend\\src\\components\\AdminLogin.js::component::AdminLogin",
              "name": "AdminLogin",
              "kind": "function",
              "start": 220,
              "end": 2749,
              "code": "function AdminLogin() {\r\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/admin-login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(credentials),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 200) {\r\n        navigate(\"/dashboard\"); // Redirect after success\r\n      } else {\r\n        setError(data.message || \"Invalid credentials\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Server error, try again later\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: \"1…"
            }
          ],
          "hooks": [],
          "contexts": []
        },
        "uses": [
          {
            "name": "hook:useState"
          },
          {
            "name": "hook:useState"
          },
          {
            "name": "hook:useNavigate"
          },
          {
            "name": "Box"
          },
          {
            "name": "Container"
          },
          {
            "name": "Paper"
          },
          {
            "name": "Box"
          },
          {
            "name": "Typography"
          },
          {
            "name": "TextField"
          },
          {
            "name": "TextField"
          },
          {
            "name": "Typography"
          },
          {
            "name": "Button"
          }
        ],
        "imports": [
          {
            "source": "react",
            "specifiers": [
              {
                "local": "React",
                "imported": "default"
              },
              {
                "local": "useState",
                "imported": "useState"
              }
            ]
          },
          {
            "source": "react-router-dom",
            "specifiers": [
              {
                "local": "useNavigate",
                "imported": "useNavigate"
              }
            ]
          },
          {
            "source": "@mui/material",
            "specifiers": [
              {
                "local": "Container",
                "imported": "Container"
              },
              {
                "local": "Typography",
                "imported": "Typography"
              },
              {
                "local": "TextField",
                "imported": "TextField"
              },
              {
                "local": "Button",
                "imported": "Button"
              },
              {
                "local": "Paper",
                "imported": "Paper"
              },
              {
                "local": "Box",
                "imported": "Box"
              }
            ]
          },
          {
            "source": "../assets/logo.png",
            "specifiers": [
              {
                "local": "logo",
                "imported": "default"
              }
            ]
          }
        ],
        "providers": [],
        "routes": [],
        "code": "import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Container, Typography, TextField, Button, Paper, Box } from \"@mui/material\";\r\nimport logo from \"../assets/logo.png\";\r\n\r\nfunction AdminLogin() {\r\n  const [credentials, setCredentials] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/admin-login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(credentials),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (res.status === 200) {\r\n        navigate(\"/dashboard\"); // Redirect after success\r\n      } else {\r\n        setError(data.message || \"Invalid credentials\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Server error, try again later\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        minHeight: \"100vh\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        background: \"white\",\r\n      }}\r\n    >\r\n      <Container maxWidth=\"xs\">\r\n…"
      }
    },
    {
      "id": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\Navbar.jsx",
      "type": "fileNode",
      "position": {
        "x": 790,
        "y": 80
      },
      "data": {
        "label": "Navbar.jsx",
        "relPath": "sample\\frontend\\src\\components\\Navbar.jsx",
        "summary": "Components: Navbar",
        "symbols": {
          "components": [
            {
              "id": "sample\\frontend\\src\\components\\Navbar.jsx::component::Navbar",
              "name": "Navbar",
              "kind": "function",
              "start": 0,
              "end": 2649,
              "code": "function Navbar() {\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  //this is true\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" sx={{ backgroundColor: \"#2C3930\" }}>\r\n        <Toolbar>\r\n          {/* Mobile Menu Button */}\r\n          <IconButton\r\n            color=\"inherit\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ display: { xs: \"block\", md: \"none\" } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          {/* Logo and Title */}\r\n          <Box sx={{ flexGrow: 1, display: \"flex\", alignItems: \"center\" }}>\r\n            <img src={logo} alt=\"Logo\" style={{ height: 50, marginRight: 10 }} />\r\n            <Typography\r\n             …"
            }
          ],
          "hooks": [],
          "contexts": []
        },
        "uses": [
          {
            "name": "hook:useState"
          },
          {
            "name": "AppBar"
          },
          {
            "name": "Toolbar"
          },
          {
            "name": "IconButton"
          },
          {
            "name": "MenuIcon"
          },
          {
            "name": "Box"
          },
          {
            "name": "Typography"
          },
          {
            "name": "Box"
          },
          {
            "name": "Button"
          },
          {
            "name": "Button"
          },
          {
            "name": "Button"
          },
          {
            "name": "Button"
          },
          {
            "name": "Drawer"
          },
          {
            "name": "List"
          },
          {
            "name": "ListItem"
          },
          {
            "name": "ListItemText"
          },
          {
            "name": "ListItem"
          },
          {
            "name": "ListItemText"
          },
          {
            "name": "ListItem"
          },
          {
            "name": "ListItemText"
          },
          {
            "name": "ListItem"
          },
          {
            "name": "ListItemText"
          },
          {
            "name": "ListItem"
          },
          {
            "name": "ListItemText"
          }
        ],
        "imports": [],
        "providers": [],
        "routes": [],
        "code": "function Navbar() {\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  //this is true\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" sx={{ backgroundColor: \"#2C3930\" }}>\r\n        <Toolbar>\r\n          {/* Mobile Menu Button */}\r\n          <IconButton\r\n            color=\"inherit\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ display: { xs: \"block\", md: \"none\" } }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          {/* Logo and Title */}\r\n          <Box sx={{ flexGrow: 1, display: \"flex\", alignItems: \"center\" }}>\r\n            <img src={logo} alt=\"Logo\" style={{ height: 50, marginRight: 10 }} />\r\n            <Typography\r\n              variant=\"h6\"\r\n              component={Link}\r\n              to=\"/dashboard\"\r\n              sx={{ textDecoration: \"none\", color: \"white\" }}\r\n            >\r\n              Student Management\r\n            </Typography>\r\n          </Box>\r\n\r\n          {/* Desktop Navigation */}\r\n          <Box sx={{ display: { xs: \"none\", md: \"block\" } }}>\r\n            <Button color=\"inherit\" component={Link} to=\"/dash…"
      }
    },
    {
      "id": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\StudentList.jsx",
      "type": "fileNode",
      "position": {
        "x": 1110,
        "y": 80
      },
      "data": {
        "label": "StudentList.jsx",
        "relPath": "sample\\frontend\\src\\components\\StudentList.jsx",
        "summary": "",
        "symbols": {
          "components": [],
          "hooks": [],
          "contexts": []
        },
        "uses": [],
        "imports": [],
        "providers": [],
        "routes": [],
        "code": "fetchStudents = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/students\");\r\n      setStudents(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching students:\", error);\r\n      alert(\"Failed to fetch students.\");\r\n      //jhjjjj\r\n    }\r\n  }"
      }
    },
    {
      "id": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\main.jsx",
      "type": "fileNode",
      "position": {
        "x": 1430,
        "y": 80
      },
      "data": {
        "label": "main.jsx",
        "relPath": "sample\\frontend\\src\\main.jsx",
        "summary": "",
        "symbols": {
          "components": [],
          "hooks": [],
          "contexts": []
        },
        "uses": [
          {
            "name": "React.StrictMode"
          },
          {
            "name": "Router"
          },
          {
            "name": "App"
          }
        ],
        "imports": [
          {
            "source": "react",
            "specifiers": [
              {
                "local": "React",
                "imported": "default"
              }
            ]
          },
          {
            "source": "react-dom/client",
            "specifiers": [
              {
                "local": "ReactDOM",
                "imported": "default"
              }
            ]
          },
          {
            "source": "./App",
            "specifiers": [
              {
                "local": "App",
                "imported": "default"
              }
            ]
          },
          {
            "source": "react-router-dom",
            "specifiers": [
              {
                "local": "Router",
                "imported": "BrowserRouter"
              }
            ]
          }
        ],
        "providers": [],
        "routes": [],
        "code": "import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.createRoot(document.getElementById(\"root\")).render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>\n);"
      }
    },
    {
      "id": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\AddStudent.jsx",
      "type": "fileNode",
      "position": {
        "x": 150,
        "y": 300
      },
      "data": {
        "label": "AddStudent.jsx",
        "relPath": "sample\\frontend\\src\\pages\\AddStudent.jsx",
        "summary": "",
        "symbols": {
          "components": [],
          "hooks": [],
          "contexts": []
        },
        "uses": [],
        "imports": [],
        "providers": [],
        "routes": [],
        "code": "fetchQr = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/generate-qr\");\r\n      setQrCode(response.data.qrCode);\r\n      setQrMessage(\"\");\r\n    } catch (error) {\r\n      //ngyvy\r\n      setQrCode(\"\");\r\n      setQrMessage(\"QR code is only available between 1 PM and 3 PM\");\r\n    }\r\n  }"
      }
    },
    {
      "id": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx",
      "type": "fileNode",
      "position": {
        "x": 470,
        "y": 300
      },
      "data": {
        "label": "Attendance.jsx",
        "relPath": "sample\\frontend\\src\\pages\\Attendance.jsx",
        "summary": "Components: Attendance",
        "symbols": {
          "components": [
            {
              "id": "sample\\frontend\\src\\pages\\Attendance.jsx::component::Attendance",
              "name": "Attendance",
              "kind": "function",
              "start": 334,
              "end": 3321,
              "code": "function Attendance() {\n  const [attendance, setAttendance] = useState([]);\n  const [filterDate, setFilterDate] = useState(new Date().toISOString().split(\"T\")[0]); // Default to today's date\n  const [filterRegisterNumber, setFilterRegisterNumber] = useState(\"\"); // Register Number filter\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchAttendance = async () => {\n      const response = await axios.get(\"http://localhost:5000/attendance\");\n      setAttendance(response.data);\n    };\n    fetchAttendance();\n  }, []);\n\n  // Filtering based on Date and Register Number\n  const filteredAttendance = attendance.filter((record) =>\n    (filterDate ? record.date === filterDate : true) &&\n    (filterRegisterNumber ? record.registerNumber.includes(filterRegisterNumber) : true)\n  );\n\n  …"
            }
          ],
          "hooks": [],
          "contexts": []
        },
        "uses": [
          {
            "name": "hook:useState"
          },
          {
            "name": "hook:useState"
          },
          {
            "name": "hook:useState"
          },
          {
            "name": "hook:useNavigate"
          },
          {
            "name": "hook:useEffect"
          },
          {
            "name": "Navbar"
          },
          {
            "name": "Container"
          },
          {
            "name": "Paper"
          },
          {
            "name": "Typography"
          },
          {
            "name": "Box"
          },
          {
            "name": "TextField"
          },
          {
            "name": "TextField"
          },
          {
            "name": "TableContainer"
          },
          {
            "name": "Table"
          },
          {
            "name": "TableHead"
          },
          {
            "name": "TableRow"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableBody"
          },
          {
            "name": "TableRow"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "Box"
          },
          {
            "name": "Button"
          }
        ],
        "imports": [
          {
            "source": "react",
            "specifiers": [
              {
                "local": "React",
                "imported": "default"
              },
              {
                "local": "useEffect",
                "imported": "useEffect"
              },
              {
                "local": "useState",
                "imported": "useState"
              }
            ]
          },
          {
            "source": "axios",
            "specifiers": [
              {
                "local": "axios",
                "imported": "default"
              }
            ]
          },
          {
            "source": "react-router-dom",
            "specifiers": [
              {
                "local": "useNavigate",
                "imported": "useNavigate"
              }
            ]
          },
          {
            "source": "@mui/material",
            "specifiers": [
              {
                "local": "Container",
                "imported": "Container"
              },
              {
                "local": "Typography",
                "imported": "Typography"
              },
              {
                "local": "Table",
                "imported": "Table"
              },
              {
                "local": "TableBody",
                "imported": "TableBody"
              },
              {
                "local": "TableCell",
                "imported": "TableCell"
              },
              {
                "local": "TableContainer",
                "imported": "TableContainer"
              },
              {
                "local": "TableHead",
                "imported": "TableHead"
              },
              {
                "local": "TableRow",
                "imported": "TableRow"
              },
              {
                "local": "Paper",
                "imported": "Paper"
              },
              {
                "local": "Button",
                "imported": "Button"
              },
              {
                "local": "TextField",
                "imported": "TextField"
              },
              {
                "local": "Box",
                "imported": "Box"
              }
            ]
          },
          {
            "source": "../components/Navbar",
            "specifiers": [
              {
                "local": "Navbar",
                "imported": "default"
              }
            ]
          }
        ],
        "providers": [],
        "routes": [],
        "code": "import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { \n  Container, Typography, Table, TableBody, TableCell, \n  TableContainer, TableHead, TableRow, Paper, Button, \n  TextField, Box \n} from \"@mui/material\";\nimport Navbar from \"../components/Navbar\"; \n\nfunction Attendance() {\n  const [attendance, setAttendance] = useState([]);\n  const [filterDate, setFilterDate] = useState(new Date().toISOString().split(\"T\")[0]); // Default to today's date\n  const [filterRegisterNumber, setFilterRegisterNumber] = useState(\"\"); // Register Number filter\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchAttendance = async () => {\n      const response = await axios.get(\"http://localhost:5000/attendance\");\n      setAttendance(response.data);\n    };\n    fetchAttendance();\n  }, []);\n\n  // Filtering based on Date and Register Number\n  const filteredAttendance = attendance.filter((record) =>\n    (filterDate ? record.date === filterDate : true) &&\n    (filterRegisterNumber ? record.registerNumber.includes(filterRegisterNumber) : true)\n  );\n\n  return (\n    <>\n    <Navbar />\n    <Container maxWidth=\"lg\" sx={{ …"
      }
    },
    {
      "id": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\PollSummary.jsx",
      "type": "fileNode",
      "position": {
        "x": 790,
        "y": 300
      },
      "data": {
        "label": "PollSummary.jsx",
        "relPath": "sample\\frontend\\src\\pages\\PollSummary.jsx",
        "summary": "Components: PollSummary",
        "symbols": {
          "components": [
            {
              "id": "sample\\frontend\\src\\pages\\PollSummary.jsx::component::PollSummary",
              "name": "PollSummary",
              "kind": "function",
              "start": 346,
              "end": 4625,
              "code": "function PollSummary() {\n  const [pollData, setPollData] = useState([]);\n  const [count, setCount] = useState(0);\n  const [date, setDate] = useState(new Date().toISOString().split(\"T\")[0]); // default today\n\n  useEffect(() => {\n    fetchPollSummary(date);\n  }, [date]);\n\n  const fetchPollSummary = async (selectedDate) => {\n    try {\n      const res = await fetch(`http://localhost:5000/poll-summary/${selectedDate}`);\n      const data = await res.json();\n      setPollData(data.students || []);\n      setCount(data.count || 0);\n    } catch (err) {\n      console.error(\"Error fetching poll summary:\", err);\n    }\n  };\n\n  const chartData = [\n    { name: \"YES\", value: count },\n    { name: \"NO\", value: pollData.length > 0 ? pollData.length - count : 0 },\n  ];\n\n  const COLORS = [\"#4CAF50\", \"#F44336\"];…"
            }
          ],
          "hooks": [],
          "contexts": []
        },
        "uses": [
          {
            "name": "hook:useState"
          },
          {
            "name": "hook:useState"
          },
          {
            "name": "hook:useState"
          },
          {
            "name": "hook:useEffect"
          },
          {
            "name": "Navbar"
          },
          {
            "name": "Container"
          },
          {
            "name": "Paper"
          },
          {
            "name": "Typography"
          },
          {
            "name": "Grid"
          },
          {
            "name": "Grid"
          },
          {
            "name": "TextField"
          },
          {
            "name": "Grid"
          },
          {
            "name": "Button"
          },
          {
            "name": "Grid"
          },
          {
            "name": "Grid"
          },
          {
            "name": "Paper"
          },
          {
            "name": "Typography"
          },
          {
            "name": "Typography"
          },
          {
            "name": "Grid"
          },
          {
            "name": "PieChart"
          },
          {
            "name": "Pie"
          },
          {
            "name": "Cell"
          },
          {
            "name": "Tooltip"
          },
          {
            "name": "Legend"
          },
          {
            "name": "Box"
          },
          {
            "name": "Typography"
          },
          {
            "name": "TableContainer"
          },
          {
            "name": "Table"
          },
          {
            "name": "TableHead"
          },
          {
            "name": "TableRow"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableBody"
          },
          {
            "name": "TableRow"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableCell"
          },
          {
            "name": "TableRow"
          },
          {
            "name": "TableCell"
          }
        ],
        "imports": [
          {
            "source": "react",
            "specifiers": [
              {
                "local": "React",
                "imported": "default"
              },
              {
                "local": "useEffect",
                "imported": "useEffect"
              },
              {
                "local": "useState",
                "imported": "useState"
              }
            ]
          },
          {
            "source": "@mui/material",
            "specifiers": [
              {
                "local": "Container",
                "imported": "Container"
              },
              {
                "local": "Typography",
                "imported": "Typography"
              },
              {
                "local": "Paper",
                "imported": "Paper"
              },
              {
                "local": "Table",
                "imported": "Table"
              },
              {
                "local": "TableBody",
                "imported": "TableBody"
              },
              {
                "local": "TableCell",
                "imported": "TableCell"
              },
              {
                "local": "TableContainer",
                "imported": "TableContainer"
              },
              {
                "local": "TableHead",
                "imported": "TableHead"
              },
              {
                "local": "TableRow",
                "imported": "TableRow"
              },
              {
                "local": "Button",
                "imported": "Button"
              },
              {
                "local": "TextField",
                "imported": "TextField"
              },
              {
                "local": "Grid",
                "imported": "Grid"
              },
              {
                "local": "Box",
                "imported": "Box"
              }
            ]
          },
          {
            "source": "recharts",
            "specifiers": [
              {
                "local": "PieChart",
                "imported": "PieChart"
              },
              {
                "local": "Pie",
                "imported": "Pie"
              },
              {
                "local": "Cell",
                "imported": "Cell"
              },
              {
                "local": "Tooltip",
                "imported": "Tooltip"
              },
              {
                "local": "Legend",
                "imported": "Legend"
              }
            ]
          },
          {
            "source": "../components/Navbar",
            "specifiers": [
              {
                "local": "Navbar",
                "imported": "default"
              }
            ]
          }
        ],
        "providers": [],
        "routes": [],
        "code": "import React, { useEffect, useState } from \"react\";\nimport {\n  Container,\n  Typography,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  TextField,\n  Grid,\n  Box,\n} from \"@mui/material\";\nimport { PieChart, Pie, Cell, Tooltip, Legend } from \"recharts\";\nimport Navbar from \"../components/Navbar\";\n\nfunction PollSummary() {\n  const [pollData, setPollData] = useState([]);\n  const [count, setCount] = useState(0);\n  const [date, setDate] = useState(new Date().toISOString().split(\"T\")[0]); // default today\n\n  useEffect(() => {\n    fetchPollSummary(date);\n  }, [date]);\n\n  const fetchPollSummary = async (selectedDate) => {\n    try {\n      const res = await fetch(`http://localhost:5000/poll-summary/${selectedDate}`);\n      const data = await res.json();\n      setPollData(data.students || []);\n      setCount(data.count || 0);\n    } catch (err) {\n      console.error(\"Error fetching poll summary:\", err);\n    }\n  };\n\n  const chartData = [\n    { name: \"YES\", value: count },\n    { name: \"NO\", value: pollData.length > 0 ? pollData.length - count : 0 },\n  ];\n\n  const COLORS = [\"#4CAF50\", \"#F44336\"];\n\n  return (\n    <>\n      <Navbar />\n      <Container …"
      }
    },
    {
      "id": "pkg:react",
      "type": "packageNode",
      "position": {
        "x": 20,
        "y": 420
      },
      "data": {
        "label": "react",
        "description": "external package"
      }
    },
    {
      "id": "pkg:react-router-dom",
      "type": "packageNode",
      "position": {
        "x": 20,
        "y": 470
      },
      "data": {
        "label": "react-router-dom",
        "description": "external package"
      }
    },
    {
      "id": "pkg:@mui/material",
      "type": "packageNode",
      "position": {
        "x": 20,
        "y": 520
      },
      "data": {
        "label": "@mui/material",
        "description": "external package"
      }
    },
    {
      "id": "pkg:../assets/logo.png",
      "type": "packageNode",
      "position": {
        "x": 20,
        "y": 570
      },
      "data": {
        "label": "../assets/logo.png",
        "description": "external package"
      }
    },
    {
      "id": "pkg:react-dom/client",
      "type": "packageNode",
      "position": {
        "x": 20,
        "y": 20
      },
      "data": {
        "label": "react-dom/client",
        "description": "external package"
      }
    },
    {
      "id": "pkg:axios",
      "type": "packageNode",
      "position": {
        "x": 20,
        "y": 70
      },
      "data": {
        "label": "axios",
        "description": "external package"
      }
    },
    {
      "id": "pkg:recharts",
      "type": "packageNode",
      "position": {
        "x": 20,
        "y": 120
      },
      "data": {
        "label": "recharts",
        "description": "external package"
      }
    }
  ],
  "edges": [
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\AdminLogin.js-pkg:react",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\AdminLogin.js",
      "target": "pkg:react",
      "animated": false,
      "type": "import-package",
      "data": {
        "raw": "react"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\AdminLogin.js-pkg:react-router-dom",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\AdminLogin.js",
      "target": "pkg:react-router-dom",
      "animated": false,
      "type": "import-package",
      "data": {
        "raw": "react-router-dom"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\AdminLogin.js-pkg:@mui/material",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\AdminLogin.js",
      "target": "pkg:@mui/material",
      "animated": false,
      "type": "import-package",
      "data": {
        "raw": "@mui/material"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\AdminLogin.js-pkg:../assets/logo.png",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\AdminLogin.js",
      "target": "pkg:../assets/logo.png",
      "animated": false,
      "type": "import-package",
      "data": {
        "raw": "../assets/logo.png"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\main.jsx-pkg:react",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\main.jsx",
      "target": "pkg:react",
      "animated": false,
      "type": "import-package",
      "data": {
        "raw": "react"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\main.jsx-pkg:react-dom/client",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\main.jsx",
      "target": "pkg:react-dom/client",
      "animated": false,
      "type": "import-package",
      "data": {
        "raw": "react-dom/client"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\main.jsx-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\App.jsx",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\main.jsx",
      "target": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\App.jsx",
      "animated": false,
      "type": "import",
      "data": {
        "raw": "./App"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\main.jsx-pkg:react-router-dom",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\main.jsx",
      "target": "pkg:react-router-dom",
      "animated": false,
      "type": "import-package",
      "data": {
        "raw": "react-router-dom"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx-pkg:react",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx",
      "target": "pkg:react",
      "animated": false,
      "type": "import-package",
      "data": {
        "raw": "react"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx-pkg:axios",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx",
      "target": "pkg:axios",
      "animated": false,
      "type": "import-package",
      "data": {
        "raw": "axios"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx-pkg:react-router-dom",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx",
      "target": "pkg:react-router-dom",
      "animated": false,
      "type": "import-package",
      "data": {
        "raw": "react-router-dom"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx-pkg:@mui/material",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx",
      "target": "pkg:@mui/material",
      "animated": false,
      "type": "import-package",
      "data": {
        "raw": "@mui/material"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\Navbar.jsx",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx",
      "target": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\Navbar.jsx",
      "animated": false,
      "type": "import",
      "data": {
        "raw": "../components/Navbar"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\PollSummary.jsx-pkg:react",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\PollSummary.jsx",
      "target": "pkg:react",
      "animated": false,
      "type": "import-package",
      "data": {
        "raw": "react"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\PollSummary.jsx-pkg:@mui/material",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\PollSummary.jsx",
      "target": "pkg:@mui/material",
      "animated": false,
      "type": "import-package",
      "data": {
        "raw": "@mui/material"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\PollSummary.jsx-pkg:recharts",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\PollSummary.jsx",
      "target": "pkg:recharts",
      "animated": false,
      "type": "import-package",
      "data": {
        "raw": "recharts"
      }
    },
    {
      "id": "imp-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\PollSummary.jsx-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\Navbar.jsx",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\PollSummary.jsx",
      "target": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\Navbar.jsx",
      "animated": false,
      "type": "import",
      "data": {
        "raw": "../components/Navbar"
      }
    },
    {
      "id": "uses-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\App.jsx-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\AdminLogin.js-AdminLogin",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\App.jsx",
      "target": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\AdminLogin.js",
      "animated": true,
      "type": "uses-component",
      "data": {
        "name": "AdminLogin"
      }
    },
    {
      "id": "uses-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\App.jsx-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx-Attendance",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\App.jsx",
      "target": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx",
      "animated": true,
      "type": "uses-component",
      "data": {
        "name": "Attendance"
      }
    },
    {
      "id": "uses-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\App.jsx-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\PollSummary.jsx-PollSummary",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\App.jsx",
      "target": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\PollSummary.jsx",
      "animated": true,
      "type": "uses-component",
      "data": {
        "name": "PollSummary"
      }
    },
    {
      "id": "uses-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\main.jsx-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\App.jsx-App",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\main.jsx",
      "target": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\App.jsx",
      "animated": true,
      "type": "uses-component",
      "data": {
        "name": "App"
      }
    },
    {
      "id": "uses-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\Navbar.jsx-Navbar",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\Attendance.jsx",
      "target": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\Navbar.jsx",
      "animated": true,
      "type": "uses-component",
      "data": {
        "name": "Navbar"
      }
    },
    {
      "id": "uses-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\PollSummary.jsx-C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\Navbar.jsx-Navbar",
      "source": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\pages\\PollSummary.jsx",
      "target": "C:\\Users\\SUHAIL\\Desktop\\code-complexity\\devbuddy-main (1)\\devbuddy-main\\sample\\frontend\\src\\components\\Navbar.jsx",
      "animated": true,
      "type": "uses-component",
      "data": {
        "name": "Navbar"
      }
    }
  ]
}